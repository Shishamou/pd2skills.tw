.skills() {
	/* =========================================================================
 	* = Initial
 	* =======================================================================*/

	// @skill-block-width  : 350px;
	// @skill-icon-size    : 100px;
	// @skill-font-size    : 24px;
	// @skill-border-width : 2px;
	// @tier-aside-width   : 96px;
	// @tier-aside-font    : 24px;
	// @progressbar-width  : 6px;

	@tier-column-width  : @skill-block-width + @skill-border-width * 2;
	@tier-width         : @tier-column-width * 3;
	@tier-height        : @skill-icon-size + @skill-border-width * 2;

	@tree-width         : @tier-width + @tier-aside-width;
	@tree-heigth        : @tier-height * 7;

	/* =========================================================================
	 * = Section
	 * =======================================================================*/

	.section.sections-skill {
		@section-main-width: @tree-width;
		@section-content-height: @tier-height * 7;

		@section-box-width: @tier-width;
		@section-box-height: @tier-height * 6;

		.section-content {
			width: @section-main-width;
			height: @section-content-height;

			&:before {
				width: @section-box-width;
				height: @section-box-height;
			}

			&:after {
				width: @section-box-width;
			}
		}

		.section-aside {
			width: ~"calc(100% - @{section-main-width})";
			min-height: @section-box-height;
		}
	}

	/* =========================================================================
	 * = Tree
	 * =======================================================================*/

	.tree {
		position: relative;

		.progressbar {
			position: absolute;
			top: @tier-height;
			right: (@tier-aside-width - @progressbar-width) / 2;
			width: @progressbar-width;
			height: @tier-height * 5;

			&:before {
				content: ' ';
				display: block;
				position: absolute;
				bottom: 0;
				width: @progressbar-width;
				height: 0;
				background: @color-normal;
			}

			.loop(@percent) when (@percent <= 100) {
				&[data-percent='@{percent}']:before {
					height: 1% * @percent;
				}
				.loop(@percent + 1);
			}
			.loop(1);
		}
	}

	.tree-control {
		position: absolute;
		right: @tier-aside-width;
		bottom: 0;
		z-index: 1;
		width: @skill-block-width;
		height: @tier-height;
		font-size: 0;

		&::before {
			content: '';
			display: inline-block;
			height: 100%;
			vertical-align: middle;
		}

		.tree-control-content {
			display: inline-block;
			font-size: @skill-font-size;
			vertical-align: middle;

			p {
				line-height: 1.2;
			}

			.tree-control-respec {
				color: @color-strong;
				cursor: pointer;

				&:hover {
					color: lighten(@color-strong, 20%);
				}
			}
		}
	}

	/* =========================================================================
	 * = Tier
	 * =======================================================================*/

	.tier {
	    position: relative;
		width: @tier-width;
	    height: @tier-height;
	    padding-right: @tier-aside-width;

		.tier-skills {
			width: @tier-width;
		}

	    .tier-aside {
			@width: @tier-aside-font * 3;
	        box-sizing: border-box;
			position: absolute;
			right: (@tier-aside-width - @width) / 2;
			bottom: 0;
	        width: @width;
			color: @color-dark;
			text-align: center;

	        p {
		        font-size: @tier-aside-font;
	            width: @tier-aside-font;
	        }

	        p:first-child {
	            float: left;
	        }

	        p:last-child {
	            float: right;
	            text-align: right;
	        }
	    }

	    &[data-unlocked='true'] .tier-aside {
	        color: @color-normal;
	    }

		&[data-reduced='true'] .tier-aside {
			p:last-child {
				text-shadow: 0 0 20px @color-strong;
			}
		}

	    &:last-child .tier-aside {
	        display: none;
	    }
	}

	/* =========================================================================
	 * = Skill
	 * =======================================================================*/

	.skill {
		position: relative;
		float: left;
		width: @skill-block-width;
		height: @skill-icon-size;
		border: @skill-border-width solid transparent;
		cursor: pointer;

		&:hover {
			border-color: @color-normal;
		}

		&:only-child {
			float: none;
			margin: 0 auto;
		}

		/* =====================================================================
		 * = Skill Icon
		 * ===================================================================*/

		.skill-icon {
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: @skill-icon-size;
			height: @skill-icon-size;

			canvas {
				width: 100%;
				height: 100%;
			}
		}

		@skill-aced-icon: './images/aced.png';
		@skill-aced-icon-size: @skill-icon-size * 2;
		&.status-aced {
			.skill-icon::after {
				content: ' ';
				display: block;
				position: absolute;
				top: -(@skill-icon-size / 2);
				left: -(@skill-icon-size / 2);
				z-index: -1;
				width: @skill-aced-icon-size;
				height: @skill-aced-icon-size;
				background: url(@skill-aced-icon) no-repeat;
				background-size: @skill-aced-icon-size;
			}
		}



		/* =====================================================================
		 * = Skill Remove
		 * ===================================================================*/

		.skill-remove {
			.icon-remove(@font-normal * 1.5);
			display: none;
		}

		&.status-owned:hover,
		&.status-aced:hover {
			.skill-remove {
				display: block;
			}
		}
	}

	/* =========================================================================
	 * = Skill Text
	 * =======================================================================*/

	.skill-text {
		box-sizing: border-box;
		display: block;
		width: auto;
		height: 100%;
		margin-left: @skill-icon-size;
		font-size: 0;

		&::before {
			content: ' ';
			display: inline-block;
			height: 100%;
			vertical-align: middle;
		}

		p {
			display: inline-block;
			margin-top: @skill-border-width;
			padding: 0 (@skill-font-size / 2);
			font-size: @skill-font-size;
			vertical-align: middle;
			line-height: 1.2;
		}

		.skill-text-hide {
			display: none;
		}

		&:hover {
			.skill-text-hold {
				display: none;
			}

			.skill-text-hide {
				display: inline-block;
			}
		}
	}
}
